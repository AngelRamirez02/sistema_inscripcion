/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package alumno;

import Horario.SeleccionarHorario;
import com.itextpdf.text.DocumentException;
import conexion.Conexion;
import coordinador.*;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author ar275
 */
public class MenuAlumno extends javax.swing.JFrame {
    //VARIABLES PARA CONEXION
    Conexion cx = new Conexion();
    
    //VARIABLES PARA BITACORA
    private String numControl;
    private LocalDate fechaInicioSesion;
    private LocalTime horaInicioSesion;
   
    public MenuAlumno(String numControl,LocalDate fechaInicioSesion, LocalTime horaInicioSesion) throws SQLException {
        //INICIALIZAR VARIABLES PARA LA BITACORAs
        this.numControl = numControl;
        this.fechaInicioSesion = fechaInicioSesion;
        this.horaInicioSesion = horaInicioSesion;
        
        initComponents();
        configuracion_ventana();
        cargar_img();
        cargarDatos_alumno();
    }

        //Funcion para toda la configuracion de la ventana 
    private void configuracion_ventana(){        
        //Centrar ventana
        this.setLocationRelativeTo(null);//La ventana aparece en el centro
    }
    
    //Funcion para cargar imagenes
    private void cargar_img(){
        //CARGAR EL LOGO PRINCIPAL DEL TEC
        Image logo_ita_img= Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/logo_ITA.png"));
        logo_ita.setIcon(new ImageIcon(logo_ita_img.getScaledInstance(logo_ita.getWidth(), logo_ita.getHeight(), Image.SCALE_SMOOTH)));
        
        //CARGAR ICONO profesor
        //Profesor
        Image icon_alumno= Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/icon_maestro_inicio.png"));
        lb_profesor_icon.setIcon(new ImageIcon(icon_alumno.getScaledInstance(lb_profesor_icon.getWidth(), lb_profesor_icon.getHeight(), Image.SCALE_SMOOTH)));
    }

    private void cargarDatos_alumno() throws SQLException {
        // Seleccionar los datos del profesor
        String consulta = "SELECT nombres, apellido_paterno, apellido_materno FROM alumno WHERE num_control = ?";
        PreparedStatement ps = cx.conectar().prepareStatement(consulta);
        ps.setString(1, this.numControl); // Asegúrate de asignar el valor del RFC
        ResultSet rs = ps.executeQuery();

        // Arreglo de datos
        if (rs.next()) {
            String nombreCompleto = rs.getString("nombres") + " " + rs.getString("apellido_paterno") + " " + rs.getString("apellido_materno");
            lb_nombreAlumno.setText("<html> <center>"+nombreCompleto+"</center> </html>");
        }
    }

    private boolean adeudoDocumento() throws SQLException {
        String sql = "SELECT ine From documentos WHERE num_control = ?";

        PreparedStatement pstm = cx.conectar().prepareStatement(sql);
        pstm.setString(1, this.numControl);

        ResultSet rs = pstm.executeQuery();

        if (rs.next()) {
            //Si no tine la ine registrada
            
            return rs.getString("ine") == null;
        }

        return true;
    }   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        logo_ita = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        lb_profesor_icon = new javax.swing.JLabel();
        panelRound1 = new paneles.PanelRound();
        btn_imprimirHorario = new javax.swing.JLabel();
        panelRound4 = new paneles.PanelRound();
        Calificaciones = new javax.swing.JLabel();
        lb_nombreAlumno = new javax.swing.JLabel();
        btn_cerrar_sesion = new paneles.PanelRound();
        btn_cerrarSesion = new javax.swing.JLabel();
        btn_elegirMaterias = new paneles.PanelRound();
        btn_seleccionarMaterias = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logo_ita.setText("LOGO ITA");
        jPanel1.add(logo_ita, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1180, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 90));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(998, 500));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_profesor_icon.setText("jLabel1");
        lb_profesor_icon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.add(lb_profesor_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 260, 230));

        panelRound1.setBackground(new java.awt.Color(153, 153, 153));
        panelRound1.setRoundBottomLeft(20);
        panelRound1.setRoundBottomRight(20);
        panelRound1.setRoundTopLeft(20);
        panelRound1.setRoundTopRight(20);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_imprimirHorario.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn_imprimirHorario.setForeground(new java.awt.Color(51, 51, 255));
        btn_imprimirHorario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_imprimirHorario.setText("Imprimir horario");
        btn_imprimirHorario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_imprimirHorario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_imprimirHorarioMousePressed(evt);
            }
        });
        panelRound1.add(btn_imprimirHorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 60));

        jPanel2.add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 130, 500, 60));

        panelRound4.setBackground(new java.awt.Color(153, 153, 153));
        panelRound4.setRoundBottomLeft(20);
        panelRound4.setRoundBottomRight(20);
        panelRound4.setRoundTopLeft(20);
        panelRound4.setRoundTopRight(20);
        panelRound4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Calificaciones.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Calificaciones.setForeground(new java.awt.Color(51, 51, 255));
        Calificaciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Calificaciones.setText("Consultar calificaciones");
        Calificaciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        panelRound4.add(Calificaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 60));

        jPanel2.add(panelRound4, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 240, 500, 60));

        lb_nombreAlumno.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lb_nombreAlumno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_nombreAlumno.setText("jLabel6");
        jPanel2.add(lb_nombreAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 340, 80));

        btn_cerrar_sesion.setBackground(new java.awt.Color(153, 153, 153));
        btn_cerrar_sesion.setRoundBottomLeft(20);
        btn_cerrar_sesion.setRoundBottomRight(20);
        btn_cerrar_sesion.setRoundTopLeft(20);
        btn_cerrar_sesion.setRoundTopRight(20);
        btn_cerrar_sesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_cerrar_sesionMousePressed(evt);
            }
        });
        btn_cerrar_sesion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_cerrarSesion.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn_cerrarSesion.setForeground(new java.awt.Color(51, 51, 255));
        btn_cerrarSesion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_cerrarSesion.setText("Cerrar sesión");
        btn_cerrarSesion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_cerrar_sesion.add(btn_cerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 60));

        jPanel2.add(btn_cerrar_sesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 450, 500, 60));

        btn_elegirMaterias.setBackground(new java.awt.Color(153, 153, 153));
        btn_elegirMaterias.setRoundBottomLeft(20);
        btn_elegirMaterias.setRoundBottomRight(20);
        btn_elegirMaterias.setRoundTopLeft(20);
        btn_elegirMaterias.setRoundTopRight(20);
        btn_elegirMaterias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_elegirMateriasMousePressed(evt);
            }
        });
        btn_elegirMaterias.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_seleccionarMaterias.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn_seleccionarMaterias.setForeground(new java.awt.Color(51, 51, 255));
        btn_seleccionarMaterias.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_seleccionarMaterias.setText("Seleccionar materias");
        btn_seleccionarMaterias.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_elegirMaterias.add(btn_seleccionarMaterias, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 60));

        jPanel2.add(btn_elegirMaterias, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 350, 500, 60));

        jScrollPane1.setViewportView(jPanel2);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 1200, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cerrar_sesionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_cerrar_sesionMousePressed
        if (SwingUtilities.isLeftMouseButton(evt)) {
            Object[] opciones = {"Aceptar", "Cancelar"};
            // Si existe información que no ha sido guardada
            // Mostrar diálogo que pregunta si desea confirmar la salida
            int opcionSeleccionada = JOptionPane.showOptionDialog(
                    null,
                    "¿Cerrar sesión?",
                    "Confirmación de salida",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE,
                    null,
                    opciones,
                    opciones[1]); // Por defecto, la opción seleccionada es "Cancelar"

            // Manejar las opciones seleccionadas
            if (opcionSeleccionada == JOptionPane.YES_OPTION) {
                //Creacion de consulta para el historial de sesione
                LocalTime horaFinSesion = LocalTime.now();//Hora de salida
                LocalDate fecha_salida = LocalDate.now();//Fecha de salida
                String sql = "INSERT INTO historial_sesiones"
                        + "(usuario,tipo_usuario,fecha_entrada, hora_entrada, fecha_salida, hora_salida)"
                        + "values (?,?,?,?,?,?)";
                try {
                    PreparedStatement ps = cx.conectar().prepareStatement(sql);//Creacion de la consulta
                    ps.setString(1, this.numControl);
                    ps.setString(2, "Alumno");
                    ps.setObject(3, this.fechaInicioSesion);
                    ps.setObject(4, this.horaInicioSesion);
                    ps.setObject(5, fecha_salida);
                    ps.setObject(6, horaFinSesion);
                    // Paso 4: Ejecutar la consulta
                    int rowsInserted = ps.executeUpdate();
                    if (rowsInserted > 0) {
                        System.out.println("Historial guardado");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(MenuAlumno.class.getName()).log(Level.SEVERE, null, ex);
                }
                //Cerrar la sesión y volver al login de alumno
                Login_alumno ventana = new Login_alumno();
                ventana.setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_btn_cerrar_sesionMousePressed

    private void btn_imprimirHorarioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_imprimirHorarioMousePressed
        //generar pdf de los registros
        if (SwingUtilities.isLeftMouseButton(evt)) {
            //Mostrar interfaz para seleccionar la carpeta
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setPreferredSize(new Dimension(800, 600));//Tamño de la ventana
            fileChooser.setDialogTitle("Seleccionar carpeta");
            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY); // Solo permitir seleccionar carpetas
            int opcion = fileChooser.showSaveDialog(null); // Mostrar el diálogo de guardar
            //si selecciona una ruta valida
            if (opcion == JFileChooser.APPROVE_OPTION) {
                File directorioSeleccionado = fileChooser.getSelectedFile();
                String rutaCarpeta = directorioSeleccionado.getAbsolutePath();
                try {
                   HorarioPDF x = new HorarioPDF();
                   x.PdfTodosLosAlumnos(this.numControl, rutaCarpeta);
                    //JOptionPane.showMessageDialog(null,"PDF guardado correctamente", "Reporte Generado",JOptionPane.INFORMATION_MESSAGE);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(SeccionAlumnos.class.getName()).log(Level.SEVERE, null, ex);
                } catch (DocumentException ex) {
                    Logger.getLogger(SeccionAlumnos.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(SeccionAlumnos.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(MenuAlumno.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btn_imprimirHorarioMousePressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Object[] opciones = {"Aceptar", "Cancelar"};
        //dialogo que pregunta si desea confirmar salir
        int opcionSeleccionada = JOptionPane.showOptionDialog(null,
                "¿Cerrar sesión y salir?", "Confirmación de salida", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE,
                null, opciones, opciones[1]); // Por defecto, la opción seleccionada es "Cancelar"
        // Manejar las opciones seleccionadas
        if (opcionSeleccionada == JOptionPane.YES_OPTION) {

            //Creacion de consulta para el historial de sesione
            LocalTime horaFinSesion = LocalTime.now();//Hora de salida
            LocalDate fecha_salida = LocalDate.now();//Fecha de salida
            String sql = "INSERT INTO historial_sesiones"
                    + "(usuario,tipo_usuario,fecha_entrada, hora_entrada, fecha_salida, hora_salida)"
                    + "values (?,?,?,?,?,?)";
            try {
                PreparedStatement ps = cx.conectar().prepareStatement(sql);//Creacion de la consulta
                ps.setString(1, this.numControl);
                ps.setString(2, "Alumno");
                ps.setObject(3, this.fechaInicioSesion);
                ps.setObject(4, this.horaInicioSesion);
                ps.setObject(5, fecha_salida);
                ps.setObject(6, horaFinSesion);
                // Paso 4: Ejecutar la consulta
                int rowsInserted = ps.executeUpdate();
                if (rowsInserted > 0) {
                    System.out.println("Historial guardado");
                }
            } catch (SQLException ex) {
                Logger.getLogger(MenuAlumno.class.getName()).log(Level.SEVERE, null, ex);
            }
            // Cerrar la aplicación
            this.setDefaultCloseOperation(this.EXIT_ON_CLOSE);
        } else {
            this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_formWindowClosing

    private void btn_elegirMateriasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_elegirMateriasMousePressed
       if(SwingUtilities.isLeftMouseButton(evt)){
           try {
               //si cuenta con aduedo de documento
               if(adeudoDocumento()){
                  //Muestra mensaje y solicita cargar el documento restante
                   JOptionPane.showMessageDialog(null, "Cargue el documento restante para poder seleccionar materias", "Aduedo de documentación", JOptionPane.WARNING_MESSAGE);
                   ModificarDocumento ventana = new ModificarDocumento(this.numControl);
                   ventana.setVisible(true);
                   this.dispose();
               }
               //Sino redirige directamente a seleccionar las materias
               else {
                   SeleccionarHorario ventana = new SeleccionarHorario(this.numControl, fechaInicioSesion, horaInicioSesion);
                   ventana.setVisible(true);
                   this.dispose();
               }
           } catch (SQLException ex) {
               Logger.getLogger(MenuAlumno.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
    }//GEN-LAST:event_btn_elegirMateriasMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MenuAlumno(null, null,null).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(MenuAlumno.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Calificaciones;
    private javax.swing.JLabel btn_cerrarSesion;
    private paneles.PanelRound btn_cerrar_sesion;
    private paneles.PanelRound btn_elegirMaterias;
    private javax.swing.JLabel btn_imprimirHorario;
    private javax.swing.JLabel btn_seleccionarMaterias;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_nombreAlumno;
    private javax.swing.JLabel lb_profesor_icon;
    private javax.swing.JLabel logo_ita;
    private paneles.PanelRound panelRound1;
    private paneles.PanelRound panelRound4;
    // End of variables declaration//GEN-END:variables
}
